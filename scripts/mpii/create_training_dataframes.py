#! /usr/bin/env python
"""Create train and val training dataframes for human pose estimation with MPII

While the directory and file paths used throughout the script can be altered,
the script is currently built to work with a `df_annotations.pickle` file
located at '/data/mpii/annotations/mpii_human_pose_v1_u12_2/`. This file can be
generated by running the `parse_annotations.py` script in the `scripts/mpii`
directory.
"""

import os

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split

from utils import dev_env

DIRPATH_MPII = dev_env.get('mpii', 'dirpath_data')
DIRPATH_IMAGES = os.path.join(DIRPATH_MPII, 'images', 'images')
DIRPATH_METADATA = os.path.join(DIRPATH_MPII, 'metadata_lists')

FPATH_DF_ANNOTATIONS = os.path.join(
    DIRPATH_MPII, 'annotations', 'mpii_human_pose_v1_u12_2',
    'df_annotations.pickle'
)
FPATH_TRAIN_SET = os.path.join(DIRPATH_METADATA, 'df_train.pickle')
FPATH_VAL_SET = os.path.join(DIRPATH_METADATA, 'df_val.pickle')


def main():
    """Main"""

    os.makedirs(DIRPATH_METADATA, exist_ok=True)

    df_annotations = pd.read_pickle(FPATH_DF_ANNOTATIONS)
    df_annotations['fpath_image'] = df_annotations['fname_image'].apply(
        lambda fname_image: os.path.join(DIRPATH_IMAGES, fname_image)
    )

    image_ids = df_annotations['idx_image'].unique()
    train_image_ids, val_image_ids = train_test_split(
        image_ids, train_size=0.90, test_size=0.10, random_state=529,
    )

    idx_train = df_annotations['idx_image'].isin(train_image_ids)
    df_train = df_annotations[idx_train]
    idx_val = df_annotations['idx_image'].isin(val_image_ids)
    df_val = df_annotations[idx_val]

    assert (len(df_train) + len(df_val)) == len(df_annotations)
    assert not np.any(df_train['idx_image'].isin(df_val['idx_image']))
    assert not np.any(df_val['idx_image'].isin(df_train['idx_image']))

    df_train.to_pickle(FPATH_TRAIN_SET)
    df_val.to_pickle(FPATH_VAL_SET)


if __name__ == '__main__':
    main()
