job_importpath: trainet.training.tf.training_job.TrainingJob
gpu_id: 0
dataset:
    n_train_steps_per_epoch: 1000
    n_validation_steps_per_epoch: 1000
    fpath_df_train: /data/imagenet/from_access_links/metadata_lists/df_classification_train_set.csv
    fpath_df_validation: /data/imagenet/from_access_links/metadata_lists/df_classification_val_set.csv
    importpath: datasets.imagenet_dataset.ImageNetDataset
    init_params:
        config:
            height: 227
            width: 227
    train_albumentations:
        compose_init_params:
            p: 0.5
        sample_keys:
            'image': 'image'
        albumentations:
            - albumentations.HorizontalFlip:
                p: 1.0
    train_transformations:
        - tensorflow.python.keras.utils.to_categorical:
            sample_keys:
                'label': 'y'
            num_classes: 63
        - trainet.datasets.ops.per_image_standardization:
            sample_keys:
                'image': 'image'
    validation_transformations:
        - tensorflow.python.keras.utils.to_categorical:
            sample_keys:
                'label': 'y'
            num_classes: 63
        - trainet.datasets.ops.per_image_standardization:
            sample_keys:
                'image': 'image'
    train_loading_params:
        batch_size: 16
        shuffle: True
        n_workers: 4
    validation_loading_params:
        batch_size: 16
        shuffle: False
        n_workers: 2
network:
    importpath: networks.tf.object_classification.resnet.ResNet
    init_params:
        config:
            height: 227
            width: 227
            n_channels: 3
            n_classes: 63
            n_initial_filters: 64
            n_blocks_per_stage: [3, 24, 36, 3]
            version: preactivation
            n_groups: 1
trainer:
    importpath: trainet.training.tf.trainer.Trainer
    init_params:
        config:
            optimizer: 'tensorflow.keras.optimizers.Adam'
            loss: 'categorical_crossentropy'
            batch_size: 16
            n_epochs: 10
    callbacks:
        - tensorflow.keras.callbacks.CSVLogger
        - tensorflow.keras.callbacks.TensorBoard
        - tensorflow.keras.callbacks.ModelCheckpoint:
            monitor: val_loss
            save_best_only: True
    metrics:
        - tensorflow.keras.metrics.categorical_accuracy
        - tensorflow.keras.metrics.top_k_categorical_accuracy
