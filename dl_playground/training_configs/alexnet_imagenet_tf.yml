job_importpath: trainet.training.tf.training_job.TrainingJob
gpu_id: 0
dataset:
    n_train_steps_per_epoch: 1000
    n_validation_steps_per_epoch: 1000
    fpath_df_train: /data/imagenet/from_access_links/metadata_lists/df_classification_train_set.csv
    fpath_df_validation: /data/imagenet/from_access_links/metadata_lists/df_classification_val_set.csv
    importpath: datasets.imagenet_dataset.ImageNetDataset
    init_params:
        config:
            height: 227
            width: 227
    train_transformations:
        - tensorflow.python.keras.utils.to_categorical:
            sample_keys:
                value:
                    - 'label'
            num_classes:
                value: 1000
        - trainet.datasets.ops.per_image_standardization:
            sample_keys:
                value:
                    - 'image'
    validation_transformations:
        - tensorflow.python.keras.utils.to_categorical:
            sample_keys:
                value:
                    - 'label'
            num_classes:
                value: 1000
        - trainet.datasets.ops.per_image_standardization:
            sample_keys:
                value:
                    - 'image'
    train_loading_params:
        batch_size: 32
        shuffle: True
        n_workers: 4
    validation_loading_params:
        batch_size: 32
        shuffle: False
        n_workers: 2
network:
    importpath: networks.tf.object_classification.alexnet.AlexNet
    init_params:
        config:
            height: 227
            width: 227
            n_channels: 3
            n_classes: 1000
trainer:
    importpath: trainet.training.tf.trainer.Trainer
    init_params:
        config:
            optimizer: 'adam'
            loss: 'categorical_crossentropy'
            batch_size: 32
            n_epochs: 10
    callbacks:
        - tensorflow.keras.callbacks.CSVLogger
        - tensorflow.keras.callbacks.TensorBoard
        - tensorflow.keras.callbacks.ModelCheckpoint:
            monitor: val_loss
            save_best_only: True
    metrics:
        - tensorflow.keras.metrics.categorical_accuracy
        - tensorflow.keras.metrics.top_k_categorical_accuracy
